@page "/decomposition"
@implements IDisposable
@inject Microsoft.AspNetCore.Components.IUriHelper UriHelper
@inject ApplicationState ApplicationState

<section>
	<h1>Decomposition</h1>
	<div class="card mb-3">
		<div class="card-header">Decompose text</div>
		<div class="card-body">
			<ValidatedForm OnSubmit="@UpdateDecomposition">
				<div class="form-group">
					<label class="control-label" for="textToDecomposeTextBox">Text to analyze</label>
					<div class="input-group">
						<input id="textToDecomposeTextBox" type="text" class="form-control" @bind="Text" placeholder="Type or paste the text to analyzeâ€¦" required />
						<div class="invalid-feedback order-1">
							Please enter some text.
						</div>
						<span class="input-group-append"><button type="submit" class="btn btn-primary"><i class="fas fa-arrow-right"></i><p class="sr-only">Decompose</p></button></span>
					</div>
				</div>
			</ValidatedForm>
		</div>
	</div>
	@if (!string.IsNullOrEmpty(AnalyzedText))
	{
		<div class="card mb-3">
			<div class="card-header">Decomposition</div>
			<div class="card-body">
				<p>@AnalyzedText</p>
				<DecompositionView Text="@AnalyzedText" />
			</div>
		</div>
	}
</section>
@code {
	private string Text { get; set; }
	private string AnalyzedText { get; set; }

	protected override Task OnInitializedAsync()
	{
		RefreshParameters(UriHelper.GetAbsoluteUri());
		UriHelper.OnLocationChanged += OnLocationChanged;
		return Task.CompletedTask;
	}

	public void Dispose()
	{
		UriHelper.OnLocationChanged -= OnLocationChanged;
	}

	private void OnLocationChanged(object sender, LocationChangedEventArgs e)
	{
		RefreshParameters(e.Location);
		StateHasChanged();
	}

	private void RefreshParameters(string uri)
	{
		AnalyzedText = Text = new Uri(uri).GetQueryParameter("text");
	}

	public void UpdateDecomposition()
	{
		// As of today, this won't reload the component, which is exactly what I wanted (yeah !)
		// Instead, this will simply trigger the LocationChanged event, allowing us to update the page.
		UriHelper.NavigateTo("/decomposition?text=" + Uri.EscapeDataString(Text));
	}
}
